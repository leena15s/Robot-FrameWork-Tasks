trigger:
  - master

pool:
  name: agent3

steps:
  - checkout: self
    displayName: 'Checkout Code'

  # Step to install Python without using Chocolatey (since you have it installed already)
  - script: |
      echo "Python 3.9 is already installed"
    displayName: 'Confirm Python Installation'

  # Install Robot Framework and dependencies
  - script: |
      python -m venv venv
      call .\venv\Scripts\activate && pip install --upgrade pip
      pip install robotframework
      pip install robotframework-seleniumlibrary
      pip install robotframework-csvlibrary  
    displayName: 'Install Robot Framework & Dependencies'

 
  # Install Firefox
  - script: |
      echo "Installing Firefox"
      choco install firefox -y
    displayName: 'Install Firefox'

 # Install GeckoDriver manually using PowerShell
  - powershell: |
      $geckoDriverVersion = "0.30.0"  # Set the version of GeckoDriver you want to install
      $geckoDriverUrl = "https://github.com/mozilla/geckodriver/releases/download/v$geckoDriverVersion/geckodriver-v$geckoDriverVersion-win64.zip"
      $destinationPath = "C:\geckodriver"
      
      # Create directory if not exists
      if (-Not (Test-Path $destinationPath)) {
          New-Item -ItemType Directory -Path $destinationPath
      }

      # Download GeckoDriver zip
      try {
          Write-Host "Downloading GeckoDriver from $geckoDriverUrl"
          Invoke-WebRequest -Uri $geckoDriverUrl -OutFile "$destinationPath\geckodriver.zip" -ErrorAction Stop
      } catch {
          Write-Host "Error downloading GeckoDriver: $_"
          exit 1
      }

      # If geckodriver.exe already exists, delete it before expanding the new archive
      if (Test-Path "$destinationPath\geckodriver.exe") {
          Write-Host "Removing existing GeckoDriver..."
          Remove-Item "$destinationPath\geckodriver.exe" -Force
      }

      # Expand the zip file and overwrite any existing files
      try {
          Write-Host "Extracting GeckoDriver..."
          Expand-Archive -Path "$destinationPath\geckodriver.zip" -DestinationPath $destinationPath -Force -ErrorAction Stop
      } catch {
          Write-Host "Error expanding the archive: $_"
          exit 1
      }

      # Add GeckoDriver to PATH
      try {
          Write-Host "Adding GeckoDriver to PATH..."
          [System.Environment]::SetEnvironmentVariable("PATH", "$env:PATH;$destinationPath", [System.EnvironmentVariableTarget]::Machine)
      } catch {
          Write-Host "Error adding GeckoDriver to PATH: $_"
          exit 1
      }

      Write-Host "GeckoDriver installed successfully."
    displayName: 'Install GeckoDriver'


  # List files in the test directory for debugging purposes
  - script: |
      echo "Current working directory: %CD%"
      echo "Checking if 'test' directory exists..."
      if exist "test" (
          echo "Listing files in 'test' directory:"
          dir test
      ) else (
          echo "'test' directory not found."
      )
    displayName: 'Debug: List Test Files'
  
  #new scrpit 
  - script: |
          # Activate the virtual environment for Windows
          call .\venv\Scripts\activate
          
          # Install dependencies (in case they aren't installed yet)
          pip install --quiet -r requirements.txt
          
          # Run Robot Framework tests
          python -m robot --console verbose test/
    displayName: 'Run All Robot Framework Test Cases'

  - script: |
          REM Activate the virtual environment for Windows
          call .\venv\Scripts\activate
          
          REM Install required dependencies
          pip install robotframework robotframework-seleniumlibrary selenium
          
          REM Run Robot Framework tests
          python -m robot --console verbose test/
    displayName: 'Run All Robot Framework Test Cases'
        
  - script: |
          echo "Robot Framework tests have completed."
    displayName: 'Post Test Actions'
    